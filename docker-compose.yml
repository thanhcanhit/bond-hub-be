version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: vodka
    ports:
      - '3000:3000'
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - PORT=3000
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - NODE_ENV=production
      # Add connection pool settings
      - DATABASE_CONNECTION_LIMIT=10
      - DATABASE_POOL_TIMEOUT=30
    restart: unless-stopped
    networks:
      - vodka-network
    command: >
      sh -c "until nc -z postgres 5432; do
        echo 'Waiting for PostgreSQL to be ready...';
        sleep 2;
      done;
      until nc -z redis 6379; do
        echo 'Waiting for Redis to be ready...';
        sleep 2;
      done;
      echo 'PostgreSQL and Redis are ready!';
      npx prisma migrate deploy && node dist/src/main.js"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G

  postgres:
    image: postgres:17
    container_name: postgres
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      # Prevent PostgreSQL from trying to alter system user permissions
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres-config/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./postgres-config/init-user-db.sh:/docker-entrypoint-initdb.d/init-user-db.sh
    restart: unless-stopped
    ports:
      - '5432:5432'
    networks:
      - vodka-network
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER:-postgres}']
      interval: 10s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G

  redis:
    image: redis:7
    container_name: redis
    env_file:
      - .env
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
    ports:
      - '6379:6379'
    volumes:
      - redis-data:/data
      - ./redis-config/redis.conf:/usr/local/etc/redis/redis.conf
    restart: unless-stopped
    networks:
      - vodka-network
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

networks:
  vodka-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
