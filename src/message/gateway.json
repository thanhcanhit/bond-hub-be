{
  "info": {
    "name": "Test Message Gateway WebSocket",
    "description": "Collection để test WebSocket gateway cho message module",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Kết nối WebSocket",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{wsUrl}}/message",
          "host": ["{{wsUrl}}"],
          "path": ["message"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "// Tạo kết nối WebSocket",
              "const socket = new WebSocket(`${pm.environment.get('wsUrl')}/message`);",
              "",
              "// Thiết lập timeout cho kết nối",
              "const connectTimeout = setTimeout(() => {",
              "    pm.test('Kết nối WebSocket thất bại - Timeout', () => {",
              "        pm.expect(false).to.be.true;",
              "    });",
              "}, 5000);",
              "",
              "// Xử lý sự kiện khi kết nối mở",
              "socket.onopen = function() {",
              "    clearTimeout(connectTimeout);",
              "    pm.test('Kết nối WebSocket thành công', () => {",
              "        pm.expect(true).to.be.true;",
              "    });",
              "    ",
              "    // Gửi token xác thực",
              "    const authMessage = {",
              "        auth: {",
              "            token: pm.environment.get('accessToken')",
              "        }",
              "    };",
              "    socket.send(JSON.stringify(authMessage));",
              "    ",
              "    // Đóng kết nối sau khi test xong",
              "    setTimeout(() => {",
              "        socket.close();",
              "    }, 1000);",
              "};",
              "",
              "// Xử lý sự kiện khi nhận tin nhắn",
              "socket.onmessage = function(event) {",
              "    const data = JSON.parse(event.data);",
              "    console.log('Nhận được tin nhắn:', data);",
              "};",
              "",
              "// Xử lý sự kiện khi có lỗi",
              "socket.onerror = function(error) {",
              "    pm.test('Kết nối WebSocket gặp lỗi', () => {",
              "        pm.expect(false).to.be.true;",
              "    });",
              "    console.error('WebSocket Error:', error);",
              "};",
              "",
              "// Xử lý sự kiện khi kết nối đóng",
              "socket.onclose = function(event) {",
              "    console.log('WebSocket đã đóng:', event);",
              "};"
            ]
          }
        }
      ],
      "response": []
    },
    {
      "name": "Gửi tin nhắn cá nhân",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{wsUrl}}/message",
          "host": ["{{wsUrl}}"],
          "path": ["message"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "// Tạo kết nối WebSocket",
              "const socket = new WebSocket(`${pm.environment.get('wsUrl')}/message`);",
              "",
              "// Thiết lập timeout cho kết nối",
              "const connectTimeout = setTimeout(() => {",
              "    pm.test('Kết nối WebSocket thất bại - Timeout', () => {",
              "        pm.expect(false).to.be.true;",
              "    });",
              "}, 5000);",
              "",
              "// Xử lý sự kiện khi kết nối mở",
              "socket.onopen = function() {",
              "    clearTimeout(connectTimeout);",
              "    pm.test('Kết nối WebSocket thành công', () => {",
              "        pm.expect(true).to.be.true;",
              "    });",
              "    ",
              "    // Gửi token xác thực",
              "    const authMessage = {",
              "        auth: {",
              "            token: pm.environment.get('accessToken')",
              "        }",
              "    };",
              "    socket.send(JSON.stringify(authMessage));",
              "    ",
              "    // Đợi 1 giây sau khi xác thực để gửi tin nhắn",
              "    setTimeout(() => {",
              "        // Tạo dữ liệu tin nhắn",
              "        const messageData = {",
              "            event: 'sendUserMessage',",
              "            data: {",
              "                receiverId: pm.environment.get('receiverId'),",
              "                content: {",
              "                    text: 'Tin nhắn test từ Postman - ' + new Date().toISOString(),",
              "                    media: []",
              "                }",
              "            }",
              "        };",
              "        ",
              "        // Gửi tin nhắn",
              "        socket.send(JSON.stringify(messageData));",
              "        console.log('Đã gửi tin nhắn:', messageData);",
              "    }, 1000);",
              "};",
              "",
              "// Xử lý sự kiện khi nhận tin nhắn",
              "socket.onmessage = function(event) {",
              "    try {",
              "        const data = JSON.parse(event.data);",
              "        console.log('Nhận được tin nhắn:', data);",
              "        ",
              "        // Kiểm tra nếu là sự kiện newMessage",
              "        if (data.event === 'newMessage') {",
              "            pm.test('Nhận được sự kiện newMessage', () => {",
              "                pm.expect(data.data).to.have.property('message');",
              "                pm.expect(data.data.message).to.have.property('senderId');",
              "                pm.expect(data.data.message).to.have.property('receiverId');",
              "                pm.expect(data.data.message.receiverId).to.equal(pm.environment.get('receiverId'));",
              "            });",
              "            ",
              "            // Đóng kết nối sau khi nhận được tin nhắn",
              "            socket.close();",
              "        }",
              "    } catch (error) {",
              "        console.error('Lỗi khi xử lý tin nhắn:', error);",
              "    }",
              "};",
              "",
              "// Xử lý sự kiện khi có lỗi",
              "socket.onerror = function(error) {",
              "    pm.test('Kết nối WebSocket gặp lỗi', () => {",
              "        pm.expect(false).to.be.true;",
              "    });",
              "    console.error('WebSocket Error:', error);",
              "};",
              "",
              "// Xử lý sự kiện khi kết nối đóng",
              "socket.onclose = function(event) {",
              "    console.log('WebSocket đã đóng:', event);",
              "};",
              "",
              "// Đặt timeout để đóng kết nối nếu không nhận được phản hồi",
              "setTimeout(() => {",
              "    if (socket.readyState === WebSocket.OPEN) {",
              "        socket.close();",
              "    }",
              "}, 10000);"
            ]
          }
        }
      ],
      "response": []
    },
    {
      "name": "Gửi tin nhắn nhóm",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{wsUrl}}/message",
          "host": ["{{wsUrl}}"],
          "path": ["message"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "// Tạo kết nối WebSocket",
              "const socket = new WebSocket(`${pm.environment.get('wsUrl')}/message`);",
              "",
              "// Thiết lập timeout cho kết nối",
              "const connectTimeout = setTimeout(() => {",
              "    pm.test('Kết nối WebSocket thất bại - Timeout', () => {",
              "        pm.expect(false).to.be.true;",
              "    });",
              "}, 5000);",
              "",
              "// Xử lý sự kiện khi kết nối mở",
              "socket.onopen = function() {",
              "    clearTimeout(connectTimeout);",
              "    pm.test('Kết nối WebSocket thành công', () => {",
              "        pm.expect(true).to.be.true;",
              "    });",
              "    ",
              "    // Gửi token xác thực",
              "    const authMessage = {",
              "        auth: {",
              "            token: pm.environment.get('accessToken')",
              "        }",
              "    };",
              "    socket.send(JSON.stringify(authMessage));",
              "    ",
              "    // Đợi 1 giây sau khi xác thực để gửi tin nhắn",
              "    setTimeout(() => {",
              "        // Tạo dữ liệu tin nhắn",
              "        const messageData = {",
              "            event: 'sendGroupMessage',",
              "            data: {",
              "                groupId: pm.environment.get('groupId'),",
              "                content: {",
              "                    text: 'Tin nhắn nhóm test từ Postman - ' + new Date().toISOString(),",
              "                    media: []",
              "                }",
              "            }",
              "        };",
              "        ",
              "        // Gửi tin nhắn",
              "        socket.send(JSON.stringify(messageData));",
              "        console.log('Đã gửi tin nhắn nhóm:', messageData);",
              "    }, 1000);",
              "};",
              "",
              "// Xử lý sự kiện khi nhận tin nhắn",
              "socket.onmessage = function(event) {",
              "    try {",
              "        const data = JSON.parse(event.data);",
              "        console.log('Nhận được tin nhắn:', data);",
              "        ",
              "        // Kiểm tra nếu là sự kiện newMessage",
              "        if (data.event === 'newMessage') {",
              "            pm.test('Nhận được sự kiện newMessage cho tin nhắn nhóm', () => {",
              "                pm.expect(data.data).to.have.property('message');",
              "                pm.expect(data.data.message).to.have.property('senderId');",
              "                pm.expect(data.data.message).to.have.property('groupId');",
              "                pm.expect(data.data.message.groupId).to.equal(pm.environment.get('groupId'));",
              "                pm.expect(data.data.type).to.equal('group');",
              "            });",
              "            ",
              "            // Đóng kết nối sau khi nhận được tin nhắn",
              "            socket.close();",
              "        }",
              "    } catch (error) {",
              "        console.error('Lỗi khi xử lý tin nhắn:', error);",
              "    }",
              "};",
              "",
              "// Xử lý sự kiện khi có lỗi",
              "socket.onerror = function(error) {",
              "    pm.test('Kết nối WebSocket gặp lỗi', () => {",
              "        pm.expect(false).to.be.true;",
              "    });",
              "    console.error('WebSocket Error:', error);",
              "};",
              "",
              "// Xử lý sự kiện khi kết nối đóng",
              "socket.onclose = function(event) {",
              "    console.log('WebSocket đã đóng:', event);",
              "};",
              "",
              "// Đặt timeout để đóng kết nối nếu không nhận được phản hồi",
              "setTimeout(() => {",
              "    if (socket.readyState === WebSocket.OPEN) {",
              "        socket.close();",
              "    }",
              "}, 10000);"
            ]
          }
        }
      ],
      "response": []
    },
    {
      "name": "Đánh dấu đã đọc tin nhắn",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{wsUrl}}/message",
          "host": ["{{wsUrl}}"],
          "path": ["message"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "// Thiết lập messageId cần đánh dấu đã đọc",
              "const messageId = pm.environment.get('messageId'); // Cần thiết lập messageId trong môi trường",
              "",
              "// Kiểm tra nếu không có messageId",
              "if (!messageId) {",
              "    pm.test('Thiếu messageId trong môi trường', () => {",
              "        console.error('Cần thiết lập messageId trong môi trường Postman');",
              "        pm.expect(false).to.be.true;",
              "    });",
              "} else {",
              "    // Tạo kết nối WebSocket",
              "    const socket = new WebSocket(`${pm.environment.get('wsUrl')}/message`);",
              "    ",
              "    // Thiết lập timeout cho kết nối",
              "    const connectTimeout = setTimeout(() => {",
              "        pm.test('Kết nối WebSocket thất bại - Timeout', () => {",
              "            pm.expect(false).to.be.true;",
              "        });",
              "    }, 5000);",
              "    ",
              "    // Xử lý sự kiện khi kết nối mở",
              "    socket.onopen = function() {",
              "        clearTimeout(connectTimeout);",
              "        pm.test('Kết nối WebSocket thành công', () => {",
              "            pm.expect(true).to.be.true;",
              "        });",
              "        ",
              "        // Gửi token xác thực",
              "        const authMessage = {",
              "            auth: {",
              "                token: pm.environment.get('accessToken')",
              "            }",
              "        };",
              "        socket.send(JSON.stringify(authMessage));",
              "        ",
              "        // Đợi 1 giây sau khi xác thực để gửi yêu cầu đánh dấu đã đọc",
              "        setTimeout(() => {",
              "            // Tạo dữ liệu đánh dấu đã đọc",
              "            const readData = {",
              "                event: 'readMessage',",
              "                data: {",
              "                    messageId: messageId",
              "                }",
              "            };",
              "            ",
              "            // Gửi yêu cầu đánh dấu đã đọc",
              "            socket.send(JSON.stringify(readData));",
              "            console.log('Đã gửi yêu cầu đánh dấu đã đọc:', readData);",
              "        }, 1000);",
              "    };",
              "    ",
              "    // Xử lý sự kiện khi nhận tin nhắn",
              "    socket.onmessage = function(event) {",
              "        try {",
              "            const data = JSON.parse(event.data);",
              "            console.log('Nhận được tin nhắn:', data);",
              "            ",
              "            // Kiểm tra nếu là sự kiện messageRead",
              "            if (data.event === 'messageRead') {",
              "                pm.test('Nhận được sự kiện messageRead', () => {",
              "                    pm.expect(data.data).to.have.property('messageId');",
              "                    pm.expect(data.data.messageId).to.equal(messageId);",
              "                    pm.expect(data.data).to.have.property('readBy');",
              "                    pm.expect(data.data).to.have.property('userId');",
              "                });",
              "                ",
              "                // Đóng kết nối sau khi nhận được phản hồi",
              "                socket.close();",
              "            }",
              "        } catch (error) {",
              "            console.error('Lỗi khi xử lý tin nhắn:', error);",
              "        }",
              "    };",
              "    ",
              "    // Xử lý sự kiện khi có lỗi",
              "    socket.onerror = function(error) {",
              "        pm.test('Kết nối WebSocket gặp lỗi', () => {",
              "            pm.expect(false).to.be.true;",
              "        });",
              "        console.error('WebSocket Error:', error);",
              "    };",
              "    ",
              "    // Xử lý sự kiện khi kết nối đóng",
              "    socket.onclose = function(event) {",
              "        console.log('WebSocket đã đóng:', event);",
              "    };",
              "    ",
              "    // Đặt timeout để đóng kết nối nếu không nhận được phản hồi",
              "    setTimeout(() => {",
              "        if (socket.readyState === WebSocket.OPEN) {",
              "            socket.close();",
              "        }",
              "    }, 10000);",
              "}"
            ]
          }
        }
      ],
      "response": []
    },
    {
      "name": "Thu hồi tin nhắn",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{wsUrl}}/message",
          "host": ["{{wsUrl}}"],
          "path": ["message"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "// Thiết lập messageId cần thu hồi",
              "const messageId = pm.environment.get('messageId'); // Cần thiết lập messageId trong môi trường",
              "",
              "// Kiểm tra nếu không có messageId",
              "if (!messageId) {",
              "    pm.test('Thiếu messageId trong môi trường', () => {",
              "        console.error('Cần thiết lập messageId trong môi trường Postman');",
              "        pm.expect(false).to.be.true;",
              "    });",
              "} else {",
              "    // Tạo kết nối WebSocket",
              "    const socket = new WebSocket(`${pm.environment.get('wsUrl')}/message`);",
              "    ",
              "    // Thiết lập timeout cho kết nối",
              "    const connectTimeout = setTimeout(() => {",
              "        pm.test('Kết nối WebSocket thất bại - Timeout', () => {",
              "            pm.expect(false).to.be.true;",
              "        });",
              "    }, 5000);",
              "    ",
              "    // Xử lý sự kiện khi kết nối mở",
              "    socket.onopen = function() {",
              "        clearTimeout(connectTimeout);",
              "        pm.test('Kết nối WebSocket thành công', () => {",
              "            pm.expect(true).to.be.true;",
              "        });",
              "        ",
              "        // Gửi token xác thực",
              "        const authMessage = {",
              "            auth: {",
              "                token: pm.environment.get('accessToken')",
              "            }",
              "        };",
              "        socket.send(JSON.stringify(authMessage));",
              "        ",
              "        // Đợi 1 giây sau khi xác thực để gửi yêu cầu thu hồi tin nhắn",
              "        setTimeout(() => {",
              "            // Tạo dữ liệu thu hồi tin nhắn",
              "            const recallData = {",
              "                event: 'recallMessage',",
              "                data: {",
              "                    messageId: messageId",
              "                }",
              "            };",
              "            ",
              "            // Gửi yêu cầu thu hồi tin nhắn",
              "            socket.send(JSON.stringify(recallData));",
              "            console.log('Đã gửi yêu cầu thu hồi tin nhắn:', recallData);",
              "        }, 1000);",
              "    };",
              "    ",
              "    // Xử lý sự kiện khi nhận tin nhắn",
              "    socket.onmessage = function(event) {",
              "        try {",
              "            const data = JSON.parse(event.data);",
              "            console.log('Nhận được tin nhắn:', data);",
              "            ",
              "            // Kiểm tra nếu là sự kiện messageRecalled",
              "            if (data.event === 'messageRecalled') {",
              "                pm.test('Nhận được sự kiện messageRecalled', () => {",
              "                    pm.expect(data.data).to.have.property('messageId');",
              "                    pm.expect(data.data.messageId).to.equal(messageId);",
              "                    pm.expect(data.data).to.have.property('userId');",
              "                });",
              "                ",
              "                // Đóng kết nối sau khi nhận được phản hồi",
              "                socket.close();",
              "            }",
              "        } catch (error) {",
              "            console.error('Lỗi khi xử lý tin nhắn:', error);",
              "        }",
              "    };",
              "    ",
              "    // Xử lý sự kiện khi có lỗi",
              "    socket.onerror = function(error) {",
              "        pm.test('Kết nối WebSocket gặp lỗi', () => {",
              "            pm.expect(false).to.be.true;",
              "        });",
              "        console.error('WebSocket Error:', error);",
              "    };",
              "    ",
              "    // Xử lý sự kiện khi kết nối đóng",
              "    socket.onclose = function(event) {",
              "        console.log('WebSocket đã đóng:', event);",
              "    };",
              "    ",
              "    // Đặt timeout để đóng kết nối nếu không nhận được phản hồi",
              "    setTimeout(() => {",
              "        if (socket.readyState === WebSocket.OPEN) {",
              "            socket.close();",
              "        }",
              "    }, 10000);",
              "}"
            ]
          }
        }
      ],
      "response": []
    },
    {
      "name": "Thêm reaction vào tin nhắn",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{wsUrl}}/message",
          "host": ["{{wsUrl}}"],
          "path": ["message"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "// Thiết lập messageId cần thêm reaction",
              "const messageId = pm.environment.get('messageId'); // Cần thiết lập messageId trong môi trường",
              "",
              "// Kiểm tra nếu không có messageId",
              "if (!messageId) {",
              "    pm.test('Thiếu messageId trong môi trường', () => {",
              "        console.error('Cần thiết lập messageId trong môi trường Postman');",
              "        pm.expect(false).to.be.true;",
              "    });",
              "} else {",
              "    // Tạo kết nối WebSocket",
              "    const socket = new WebSocket(`${pm.environment.get('wsUrl')}/message`);",
              "    ",
              "    // Thiết lập timeout cho kết nối",
              "    const connectTimeout = setTimeout(() => {",
              "        pm.test('Kết nối WebSocket thất bại - Timeout', () => {",
              "            pm.expect(false).to.be.true;",
              "        });",
              "    }, 5000);",
              "    ",
              "    // Xử lý sự kiện khi kết nối mở",
              "    socket.onopen = function() {",
              "        clearTimeout(connectTimeout);",
              "        pm.test('Kết nối WebSocket thành công', () => {",
              "            pm.expect(true).to.be.true;",
              "        });",
              "        ",
              "        // Gửi token xác thực",
              "        const authMessage = {",
              "            auth: {",
              "                token: pm.environment.get('accessToken')",
              "            }",
              "        };",
              "        socket.send(JSON.stringify(authMessage));",
              "        ",
              "        // Đợi 1 giây sau khi xác thực để gửi yêu cầu thêm reaction",
              "        setTimeout(() => {",
              "            // Tạo dữ liệu thêm reaction",
              "            const reactionData = {",
              "                event: 'addReaction',",
              "                data: {",
              "                    messageId: messageId,",
              "                    reaction: 'LIKE' // Các loại reaction: LIKE, LOVE, HAHA, WOW, SAD, ANGRY",
              "                }",
              "            };",
              "            ",
              "            // Gửi yêu cầu thêm reaction",
              "            socket.send(JSON.stringify(reactionData));",
              "            console.log('Đã gửi yêu cầu thêm reaction:', reactionData);",
              "        }, 1000);",
              "    };",
              "    ",
              "    // Xử lý sự kiện khi nhận tin nhắn",
              "    socket.onmessage = function(event) {",
              "        try {",
              "            const data = JSON.parse(event.data);",
              "            console.log('Nhận được tin nhắn:', data);",
              "            ",
              "            // Kiểm tra nếu là sự kiện messageReactionUpdated",
              "            if (data.event === 'messageReactionUpdated') {",
              "                pm.test('Nhận được sự kiện messageReactionUpdated', () => {",
              "                    pm.expect(data.data).to.have.property('messageId');",
              "                    pm.expect(data.data.messageId).to.equal(messageId);",
              "                    pm.expect(data.data).to.have.property('reactions');",
              "                    pm.expect(data.data).to.have.property('userId');",
              "                });",
              "                ",
              "                // Đóng kết nối sau khi nhận được phản hồi",
              "                socket.close();",
              "            }",
              "        } catch (error) {",
              "            console.error('Lỗi khi xử lý tin nhắn:', error);",
              "        }",
              "    };",
              "    ",
              "    // Xử lý sự kiện khi có lỗi",
              "    socket.onerror = function(error) {",
              "        pm.test('Kết nối WebSocket gặp lỗi', () => {",
              "            pm.expect(false).to.be.true;",
              "        });",
              "        console.error('WebSocket Error:', error);",
              "    };",
              "    ",
              "    // Xử lý sự kiện khi kết nối đóng",
              "    socket.onclose = function(event) {",
              "        console.log('WebSocket đã đóng:', event);",
              "    };",
              "    ",
              "    // Đặt timeout để đóng kết nối nếu không nhận được phản hồi",
              "    setTimeout(() => {",
              "        if (socket.readyState === WebSocket.OPEN) {",
              "            socket.close();",
              "        }",
              "    }, 10000);",
              "}"
            ]
          }
        }
      ],
      "response": []
    },
    {
      "name": "Xóa reaction khỏi tin nhắn",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{wsUrl}}/message",
          "host": ["{{wsUrl}}"],
          "path": ["message"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "// Thiết lập messageId cần xóa reaction",
              "const messageId = pm.environment.get('messageId'); // Cần thiết lập messageId trong môi trường",
              "",
              "// Kiểm tra nếu không có messageId",
              "if (!messageId) {",
              "    pm.test('Thiếu messageId trong môi trường', () => {",
              "        console.error('Cần thiết lập messageId trong môi trường Postman');",
              "        pm.expect(false).to.be.true;",
              "    });",
              "} else {",
              "    // Tạo kết nối WebSocket",
              "    const socket = new WebSocket(`${pm.environment.get('wsUrl')}/message`);",
              "    ",
              "    // Thiết lập timeout cho kết nối",
              "    const connectTimeout = setTimeout(() => {",
              "        pm.test('Kết nối WebSocket thất bại - Timeout', () => {",
              "            pm.expect(false).to.be.true;",
              "        });",
              "    }, 5000);",
              "    ",
              "    // Xử lý sự kiện khi kết nối mở",
              "    socket.onopen = function() {",
              "        clearTimeout(connectTimeout);",
              "        pm.test('Kết nối WebSocket thành công', () => {",
              "            pm.expect(true).to.be.true;",
              "        });",
              "        ",
              "        // Gửi token xác thực",
              "        const authMessage = {",
              "            auth: {",
              "                token: pm.environment.get('accessToken')",
              "            }",
              "        };",
              "        socket.send(JSON.stringify(authMessage));",
              "        ",
              "        // Đợi 1 giây sau khi xác thực để gửi yêu cầu xóa reaction",
              "        setTimeout(() => {",
              "            // Tạo dữ liệu xóa reaction",
              "            const removeReactionData = {",
              "                event: 'removeReaction',",
              "                data: {",
              "                    messageId: messageId",
              "                }",
              "            };",
              "            ",
              "            // Gửi yêu cầu xóa reaction",
              "            socket.send(JSON.stringify(removeReactionData));",
              "            console.log('Đã gửi yêu cầu xóa reaction:', removeReactionData);",
              "        }, 1000);",
              "    };",
              "    ",
              "    // Xử lý sự kiện khi nhận tin nhắn",
              "    socket.onmessage = function(event) {",
              "        try {",
              "            const data = JSON.parse(event.data);",
              "            console.log('Nhận được tin nhắn:', data);",
              "            ",
              "            // Kiểm tra nếu là sự kiện messageReactionUpdated",
              "            if (data.event === 'messageReactionUpdated') {",
              "                pm.test('Nhận được sự kiện messageReactionUpdated sau khi xóa', () => {",
              "                    pm.expect(data.data).to.have.property('messageId');",
              "                    pm.expect(data.data.messageId).to.equal(messageId);",
              "                    pm.expect(data.data).to.have.property('reactions');",
              "                    pm.expect(data.data).to.have.property('userId');",
              "                });",
              "                ",
              "                // Đóng kết nối sau khi nhận được phản hồi",
              "                socket.close();",
              "            }",
              "        } catch (error) {",
              "            console.error('Lỗi khi xử lý tin nhắn:', error);",
              "        }",
              "    };",
              "    ",
              "    // Xử lý sự kiện khi có lỗi",
              "    socket.onerror = function(error) {",
              "        pm.test('Kết nối WebSocket gặp lỗi', () => {",
              "            pm.expect(false).to.be.true;",
              "        });",
              "        console.error('WebSocket Error:', error);",
              "    };",
              "    ",
              "    // Xử lý sự kiện khi kết nối đóng",
              "    socket.onclose = function(event) {",
              "        console.log('WebSocket đã đóng:', event);",
              "    };",
              "    ",
              "    // Đặt timeout để đóng kết nối nếu không nhận được phản hồi",
              "    setTimeout(() => {",
              "        if (socket.readyState === WebSocket.OPEN) {",
              "            socket.close();",
              "        }",
              "    }, 10000);",
              "}"
            ]
          }
        }
      ],
      "response": []
    },
    {
      "name": "Kiểm tra trạng thái người dùng",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{wsUrl}}/message",
          "host": ["{{wsUrl}}"],
          "path": ["message"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "// Tạo kết nối WebSocket",
              "const socket = new WebSocket(`${pm.environment.get('wsUrl')}/message`);",
              "",
              "// Thiết lập timeout cho kết nối",
              "const connectTimeout = setTimeout(() => {",
              "    pm.test('Kết nối WebSocket thất bại - Timeout', () => {",
              "        pm.expect(false).to.be.true;",
              "    });",
              "}, 5000);",
              "",
              "// Xử lý sự kiện khi kết nối mở",
              "socket.onopen = function() {",
              "    clearTimeout(connectTimeout);",
              "    pm.test('Kết nối WebSocket thành công', () => {",
              "        pm.expect(true).to.be.true;",
              "    });",
              "    ",
              "    // Gửi token xác thực",
              "    const authMessage = {",
              "        auth: {",
              "            token: pm.environment.get('accessToken')",
              "        }",
              "    };",
              "    socket.send(JSON.stringify(authMessage));",
              "    ",
              "    // Đợi 1 giây sau khi xác thực để gửi yêu cầu kiểm tra trạng thái",
              "    setTimeout(() => {",
              "        // Lấy danh sách userIds cần kiểm tra",
              "        const userIds = [pm.environment.get('receiverId')];",
              "        ",
              "        // Tạo dữ liệu kiểm tra trạng thái",
              "        const statusData = {",
              "            event: 'getUserStatus',",
              "            data: {",
              "                userIds: userIds",
              "            }",
              "        };",
              "        ",
              "        // Gửi yêu cầu kiểm tra trạng thái",
              "        socket.send(JSON.stringify(statusData));",
              "        console.log('Đã gửi yêu cầu kiểm tra trạng thái:', statusData);",
              "    }, 1000);",
              "};",
              "",
              "// Xử lý sự kiện khi nhận tin nhắn",
              "socket.onmessage = function(event) {",
              "    try {",
              "        const data = JSON.parse(event.data);",
              "        console.log('Nhận được tin nhắn:', data);",
              "        ",
              "        // Kiểm tra nếu là phản hồi cho getUserStatus",
              "        if (data.event === 'getUserStatus') {",
              "            pm.test('Nhận được phản hồi getUserStatus', () => {",
              "                pm.expect(data.data).to.be.an('object');",
              "                const receiverId = pm.environment.get('receiverId');",
              "                pm.expect(data.data).to.have.property(receiverId);",
              "                pm.expect(data.data[receiverId]).to.have.property('status');",
              "                pm.expect(['online', 'offline']).to.include(data.data[receiverId].status);",
              "            });",
              "            ",
              "            // Đóng kết nối sau khi nhận được phản hồi",
              "            socket.close();",
              "        }",
              "    } catch (error) {",
              "        console.error('Lỗi khi xử lý tin nhắn:', error);",
              "    }",
              "};",
              "",
              "// Xử lý sự kiện khi có lỗi",
              "socket.onerror = function(error) {",
              "    pm.test('Kết nối WebSocket gặp lỗi', () => {",
              "        pm.expect(false).to.be.true;",
              "    });",
              "    console.error('WebSocket Error:', error);",
              "};",
              "",
              "// Xử lý sự kiện khi kết nối đóng",
              "socket.onclose = function(event) {",
              "    console.log('WebSocket đã đóng:', event);",
              "};",
              "",
              "// Đặt timeout để đóng kết nối nếu không nhận được phản hồi",
              "setTimeout(() => {",
              "    if (socket.readyState === WebSocket.OPEN) {",
              "        socket.close();",
              "    }",
              "}, 10000);"
            ]
          }
        }
      ],
      "response": []
    },
    {
      "name": "Gửi thông báo đang nhập",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{wsUrl}}/message",
          "host": ["{{wsUrl}}"],
          "path": ["message"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "// Tạo kết nối WebSocket",
              "const socket = new WebSocket(`${pm.environment.get('wsUrl')}/message`);",
              "",
              "// Thiết lập timeout cho kết nối",
              "const connectTimeout = setTimeout(() => {",
              "    pm.test('Kết nối WebSocket thất bại - Timeout', () => {",
              "        pm.expect(false).to.be.true;",
              "    });",
              "}, 5000);",
              "",
              "// Xử lý sự kiện khi kết nối mở",
              "socket.onopen = function() {",
              "    clearTimeout(connectTimeout);",
              "    pm.test('Kết nối WebSocket thành công', () => {",
              "        pm.expect(true).to.be.true;",
              "    });",
              "    ",
              "    // Gửi token xác thực",
              "    const authMessage = {",
              "        auth: {",
              "            token: pm.environment.get('accessToken')",
              "        }",
              "    };",
              "    socket.send(JSON.stringify(authMessage));",
              "    ",
              "    // Đợi 1 giây sau khi xác thực để gửi thông báo đang nhập",
              "    setTimeout(() => {",
              "        // Tạo dữ liệu thông báo đang nhập",
              "        const typingData = {",
              "            event: 'typing',",
              "            data: {",
              "                receiverId: pm.environment.get('receiverId')",
              "            }",
              "        };",
              "        ",
              "        // Gửi thông báo đang nhập",
              "        socket.send(JSON.stringify(typingData));",
              "        console.log('Đã gửi thông báo đang nhập:', typingData);",
              "        ",
              "        // Đợi 3 giây rồi gửi thông báo dừng nhập",
              "        setTimeout(() => {",
              "            const stopTypingData = {",
              "                event: 'stopTyping',",
              "                data: {",
              "                    receiverId: pm.environment.get('receiverId')",
              "                }",
              "            };",
              "            ",
              "            socket.send(JSON.stringify(stopTypingData));",
              "            console.log('Đã gửi thông báo dừng nhập:', stopTypingData);",
              "            ",
              "            // Đóng kết nối sau khi gửi thông báo dừng nhập",
              "            setTimeout(() => {",
              "                socket.close();",
              "            }, 1000);",
              "        }, 3000);",
              "    }, 1000);",
              "};",
              "",
              "// Xử lý sự kiện khi nhận tin nhắn",
              "socket.onmessage = function(event) {",
              "    try {",
              "        const data = JSON.parse(event.data);",
              "        console.log('Nhận được tin nhắn:', data);",
              "    } catch (error) {",
              "        console.error('Lỗi khi xử lý tin nhắn:', error);",
              "    }",
              "};",
              "",
              "// Xử lý sự kiện khi có lỗi",
              "socket.onerror = function(error) {",
              "    pm.test('Kết nối WebSocket gặp lỗi', () => {",
              "        pm.expect(false).to.be.true;",
              "    });",
              "    console.error('WebSocket Error:', error);",
              "};",
              "",
              "// Xử lý sự kiện khi kết nối đóng",
              "socket.onclose = function(event) {",
              "    console.log('WebSocket đã đóng:', event);",
              "};",
              "",
              "// Đặt timeout để đóng kết nối nếu không nhận được phản hồi",
              "setTimeout(() => {",
              "    if (socket.readyState === WebSocket.OPEN) {",
              "        socket.close();",
              "    }",
              "}, 10000);"
            ]
          }
        }
      ],
      "response": []
    },
    {
      "name": "Gửi heartbeat",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{wsUrl}}/message",
          "host": ["{{wsUrl}}"],
          "path": ["message"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "// Tạo kết nối WebSocket",
              "const socket = new WebSocket(`${pm.environment.get('wsUrl')}/message`);",
              "",
              "// Thiết lập timeout cho kết nối",
              "const connectTimeout = setTimeout(() => {",
              "    pm.test('Kết nối WebSocket thất bại - Timeout', () => {",
              "        pm.expect(false).to.be.true;",
              "    });",
              "}, 5000);",
              "",
              "// Xử lý sự kiện khi kết nối mở",
              "socket.onopen = function() {",
              "    clearTimeout(connectTimeout);",
              "    pm.test('Kết nối WebSocket thành công', () => {",
              "        pm.expect(true).to.be.true;",
              "    });",
              "    ",
              "    // Gửi token xác thực",
              "    const authMessage = {",
              "        auth: {",
              "            token: pm.environment.get('accessToken')",
              "        }",
              "    };",
              "    socket.send(JSON.stringify(authMessage));",
              "    ",
              "    // Đợi 1 giây sau khi xác thực để gửi heartbeat",
              "    setTimeout(() => {",
              "        // Tạo dữ liệu heartbeat",
              "        const heartbeatData = {",
              "            event: 'heartbeat',",
              "            data: {}",
              "        };",
              "        ",
              "        // Gửi heartbeat",
              "        socket.send(JSON.stringify(heartbeatData));",
              "        console.log('Đã gửi heartbeat:', heartbeatData);",
              "    }, 1000);",
              "};",
              "",
              "// Xử lý sự kiện khi nhận tin nhắn",
              "socket.onmessage = function(event) {",
              "    try {",
              "        const data = JSON.parse(event.data);",
              "        console.log('Nhận được tin nhắn:', data);",
              "        ",
              "        // Kiểm tra nếu là phản hồi cho heartbeat",
              "        if (data.event === 'heartbeat') {",
              "            pm.test('Nhận được phản hồi heartbeat', () => {",
              "                pm.expect(data.data).to.have.property('status');",
              "                pm.expect(data.data.status).to.equal('ok');",
              "                pm.expect(data.data).to.have.property('timestamp');",
              "            });",
              "            ",
              "            // Đóng kết nối sau khi nhận được phản hồi",
              "            socket.close();",
              "        }",
              "    } catch (error) {",
              "        console.error('Lỗi khi xử lý tin nhắn:', error);",
              "    }",
              "};",
              "",
              "// Xử lý sự kiện khi có lỗi",
              "socket.onerror = function(error) {",
              "    pm.test('Kết nối WebSocket gặp lỗi', () => {",
              "        pm.expect(false).to.be.true;",
              "    });",
              "    console.error('WebSocket Error:', error);",
              "};",
              "",
              "// Xử lý sự kiện khi kết nối đóng",
              "socket.onclose = function(event) {",
              "    console.log('WebSocket đã đóng:', event);",
              "};",
              "",
              "// Đặt timeout để đóng kết nối nếu không nhận được phản hồi",
              "setTimeout(() => {",
              "    if (socket.readyState === WebSocket.OPEN) {",
              "        socket.close();",
              "    }",
              "}, 10000);"
            ]
          }
        }
      ],
      "response": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Thiết lập các biến môi trường mặc định nếu chưa có",
          "if (!pm.environment.get('baseUrl')) {",
          "    pm.environment.set('baseUrl', 'http://localhost:3000');",
          "}",
          "",
          "if (!pm.environment.get('wsUrl')) {",
          "    pm.environment.set('wsUrl', 'ws://localhost:3000');",
          "}"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "accessToken",
      "value": "your_access_token_here",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "your_user_id_here",
      "type": "string"
    },
    {
      "key": "receiverId",
      "value": "receiver_user_id_here",
      "type": "string"
    },
    {
      "key": "groupId",
      "value": "group_id_here",
      "type": "string"
    }
  ]
}
